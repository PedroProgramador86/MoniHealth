import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import java.awt.Frame;
import javax.swing.JFrame;


public class InfoAgenda extends javax.swing.JDialog {
    
    private Agenda agenda;
    private int idAgendamento;

    private String nomePaciente;
    private String convenioPaciente;
    private String enfermeiroPaciente;
    private String motivoAgendamento; // Nova variável para o motivo do agendamento
    
   public InfoAgenda(java.awt.Frame parent, boolean modal, String nomePaciente, String convenioPaciente, String enfermeiroPaciente, String motivoAgendamento, int idAgendamento, Agenda agenda) {
        super(parent, modal);
        this.nomePaciente = nomePaciente;
        this.convenioPaciente = convenioPaciente;
        this.enfermeiroPaciente = enfermeiroPaciente;
        this.motivoAgendamento = motivoAgendamento;
        this.idAgendamento = idAgendamento;
        
        this.agenda = agenda;

        initComponents(); // Inicializa os componentes da tela
        
        jLabel8.setText(nomePaciente); // Exibe o nome do paciente
        jLabel6.setText(convenioPaciente); // Exibe o convênio do paciente
        jLabel7.setText(enfermeiroPaciente); // Exibe o enfermeiro
        
        String tipoAgendamento = obterTipoAgendamento(nomePaciente);
        motivoDoAgendamento.setText(tipoAgendamento); // Exibe o motivo do agendamento
        
        jButton1.addActionListener(e -> {
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Você tem certeza que deseja cancelar este agendamento?", 
                "Confirmar Cancelamento", 
                JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                cancelarAgendamento(this.idAgendamento); // Chama o método para cancelar o agendamento
                dispose(); // Fecha o JDialog
            }
        });
        
        salvarInfo.addActionListener(e -> {
            // Obtém o status selecionado no ComboBox
            String novoStatus = (String) selecaoDeStatus.getSelectedItem();

            // Atualiza o status no banco de dados
            atualizarStatusAgendamento(idAgendamento, novoStatus);

            // Atualiza a tabela na Agenda
            agenda.atualizarTabelaAgenda(); // Agora funciona, pois 'agenda' é a instância de Agenda

            // Fecha a janela de informações
            dispose();
        });


        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        selecaoDeStatus = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        motivoDoAgendamento = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        salvarInfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("Paciente:");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel3.setText("Status de Agendamento:");

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel4.setText("Convênio:");

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel5.setText("Enfermeiro(a):");

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 102, 255));
        jLabel6.setText("convenioPaciente");

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 102, 255));
        jLabel7.setText("enfermeiroPaciente");

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 102, 255));
        jLabel8.setText("nomeDoPaciente");

        selecaoDeStatus.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        selecaoDeStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Atendido", "Faltou", "Confirmado", " " }));

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cancelar Agendamento");

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel9.setText("Motivo Do Agendamento:");

        motivoDoAgendamento.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        motivoDoAgendamento.setForeground(new java.awt.Color(51, 102, 255));
        motivoDoAgendamento.setText("Motivo Do Agendamento:");

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        jLabel2.setText("Informações");

        salvarInfo.setBackground(new java.awt.Color(51, 255, 51));
        salvarInfo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        salvarInfo.setForeground(new java.awt.Color(255, 255, 255));
        salvarInfo.setText("Salvar Info");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(selecaoDeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(motivoDoAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap(215, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(salvarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(selecaoDeStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(motivoDoAgendamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salvarInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private String obterTipoAgendamento(String nomePaciente) {
        String tipoAgendamento = "Desconhecido"; // Valor padrão

        try (Connection conn = ConexaoBancoDeDados.conectar()) {
            // SQL para buscar o TipoAgendamento com base no nome do paciente
            String sql = "SELECT TipoAgendamento FROM Agendamentos WHERE NomePaciente = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, nomePaciente);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                tipoAgendamento = rs.getString("TipoAgendamento");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return tipoAgendamento;
    }
    
    private void cancelarAgendamento(int idAgendamento) {
        try (Connection conn = ConexaoBancoDeDados.conectar()) {
            // SQL para remover o agendamento do banco de dados baseado no ID
            String sql = "DELETE FROM Agendamentos WHERE Id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, idAgendamento); // Define o ID do agendamento a ser removido

            // Executa a consulta DELETE
            int rowsAffected = stmt.executeUpdate();

            // Verifica se o agendamento foi removido com sucesso
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Agendamento cancelado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cancelar agendamento.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados.");
        }
    }
    
    private void atualizarStatusAgendamento(int idAgendamento, String novoStatus) {
        try (Connection conn = ConexaoBancoDeDados.conectar()) {
            // SQL para atualizar o status do agendamento
            String sql = "UPDATE Agendamentos SET StatusAgendamento = ? WHERE Id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            stmt.setString(1, novoStatus);  // Define o novo status
            stmt.setInt(2, idAgendamento);  // Define o ID do agendamento

            int rowsUpdated = stmt.executeUpdate();  // Executa a atualização

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Status atualizado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar o status.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados.");
        }
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel motivoDoAgendamento;
    private javax.swing.JButton salvarInfo;
    private javax.swing.JComboBox<String> selecaoDeStatus;
    // End of variables declaration//GEN-END:variables
}
