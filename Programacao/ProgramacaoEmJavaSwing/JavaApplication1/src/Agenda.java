import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class Agenda extends javax.swing.JFrame {
    private String nomeEnfermeira;
    
    public Agenda(String nomeEnfermeira) {
        
        this.nomeEnfermeira = nomeEnfermeira;
        initComponents();

        nomeDaEnfermeira.setText(nomeEnfermeira);

        botaoAgenda.setSelected(true);
        botaoPainel.setSelected(false);
        botaoProntuarios.setSelected(false);

        botaoPainel.addActionListener(e -> {
            new Painel(nomeEnfermeira).setVisible(true);
            dispose();
        });

        botaoProntuarios.addActionListener(e -> {
            new Prontuarios(nomeEnfermeira).setVisible(true);
            dispose();
        });
        
        botaoDelogarConta.addActionListener(e -> {
            new Login().setVisible(true); // abre a tela de login
            dispose(); // fecha a tela atual
        });
        
        novoAgendamento.addActionListener(e -> {
            AgendamentoPaciente dialog = new AgendamentoPaciente(this, true, this); // Passa a referência de `Agenda` como parâmetro
            dialog.setLocationRelativeTo(this); // Centraliza a janela
            dialog.setVisible(true);
        });

        
        atualizarTabelaAgenda(); 

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        botaoAgenda = new javax.swing.JToggleButton();
        botaoPainel = new javax.swing.JToggleButton();
        botaoProntuarios = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        nomeDaEnfermeira = new javax.swing.JLabel();
        botaoDelogarConta = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDaAgenda = new javax.swing.JTable();
        button4 = new java.awt.Button();
        novoAgendamento = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MoniHealth");

        botaoAgenda.setBackground(new java.awt.Color(0, 204, 255));
        botaoAgenda.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botaoAgenda.setText("Agenda");

        botaoPainel.setBackground(new java.awt.Color(0, 204, 255));
        botaoPainel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botaoPainel.setText("Painel");

        botaoProntuarios.setBackground(new java.awt.Color(0, 204, 255));
        botaoProntuarios.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botaoProntuarios.setText("Prontuarios");

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 30)); // NOI18N
        jLabel2.setText("Pacientes do Dia");
        jLabel2.setFocusable(false);
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        button1.setBackground(new java.awt.Color(153, 153, 153));
        button1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        button1.setLabel("Observações");

        button2.setBackground(new java.awt.Color(153, 153, 153));
        button2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        button2.setLabel("Lista de Espera");

        button3.setBackground(new java.awt.Color(153, 153, 153));
        button3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        button3.setLabel("Imprimir Agenda");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        nomeDaEnfermeira.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        nomeDaEnfermeira.setForeground(new java.awt.Color(51, 51, 51));
        nomeDaEnfermeira.setText("Nome da Enfermeira");

        botaoDelogarConta.setBackground(new java.awt.Color(102, 102, 102));
        botaoDelogarConta.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        botaoDelogarConta.setText("Sair");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(botaoAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoPainel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoProntuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(nomeDaEnfermeira)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoDelogarConta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(botaoAgenda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(botaoPainel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoDelogarConta, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(botaoProntuarios, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nomeDaEnfermeira, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSplitPane1.setDividerLocation(300);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Horario", "Paciente"
            }
        ));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jScrollPane2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        tabelaDaAgenda.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tabelaDaAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00", null, null, null, null, null, null, null},
                {"08:30", null, null, null, null, null, null, null},
                {"09:00", null, null, null, null, null, null, null},
                {"09:30", null, null, null, null, null, null, null},
                {"10:00", null, null, null, null, null, null, null},
                {"10:30", null, null, null, null, null, null, null},
                {"11:00", null, null, null, null, null, null, null},
                {"11:30", null, null, null, null, null, null, null},
                {"12:00", null, null, null, null, null, null, null},
                {"12:30", null, null, null, null, null, null, null},
                {"16:00", null, null, null, null, null, null, null},
                {"16:30", null, null, null, null, null, null, null},
                {"17:00", null, null, null, null, null, null, null},
                {"17:30", null, null, null, null, null, null, null},
                {"18:00", null, null, null, null, null, null, null}
            },
            new String [] {
                "Horario", "Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sabado"
            }
        ));
        tabelaDaAgenda.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tabelaDaAgenda.setShowGrid(true);
        jScrollPane2.setViewportView(tabelaDaAgenda);

        jSplitPane1.setRightComponent(jScrollPane2);

        button4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        button4.setLabel("Novo Paciente");

        novoAgendamento.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        novoAgendamento.setLabel("+ Novo Agendamento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(novoAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button4, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(novoAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Agenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Agenda("Nome Teste").setVisible(true); // ✅ Agora passa um nome fictício só pra teste
            }
        });
    }
    
    public void atualizarTabelaAgenda() {
        try (Connection conn = ConexaoBancoDeDados.conectar()) {
            // Lista de todos os horários possíveis
            String[] horarios = {
                "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", 
                "12:00", "12:30", "16:00", "16:30", "17:00", "17:30", "18:00"
            };

            // SQL para buscar os agendamentos existentes
            String sql = "SELECT HoraAgendamento, DiaDaSemana, PacienteId FROM Agendamentos ORDER BY HoraAgendamento";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            // Obter o modelo da tabela
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tabelaDaAgenda.getModel();

            // Limpar a tabela antes de adicionar os novos dados
            model.setRowCount(0);

            // Criar um ArrayList para armazenar os horários agendados
            java.util.List<String> agendamentos = new java.util.ArrayList<>();

            // Preencher o ArrayList com os horários agendados
            while (rs.next()) {
                String horaAgendamento = rs.getString("HoraAgendamento");
                String diaDaSemana = rs.getString("DiaDaSemana");
                int pacienteId = rs.getInt("PacienteId");

                // Buscar o nome do paciente
                String nomePaciente = obterNomePaciente(pacienteId);

                // Adicionar o agendamento à lista
                agendamentos.add(horaAgendamento + "|" + nomePaciente + "|" + diaDaSemana);
            }

            // Preencher todos os horários na tabela
            for (String horario : horarios) {
                boolean encontrado = false;

                // Verificar se o horário já tem um agendamento
                for (String agendamento : agendamentos) {
                    String[] partes = agendamento.split("\\|");
                    String horaAgendamento = partes[0];

                    if (horaAgendamento.equals(horario)) {
                        String nomePaciente = partes[1];

                        // Adicionar linha à tabela com o nome do paciente
                        model.addRow(new Object[]{horario, nomePaciente, "", "", "", "", "", ""});
                        encontrado = true;
                        break;
                    }
                }

                // Se não houver agendamento, deixar a célula em branco
                if (!encontrado) {
                    model.addRow(new Object[]{horario, "", "", "", "", "", "", ""}); // Deixa as células em branco
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao carregar os agendamentos.");
        }
    }






    // Método auxiliar para obter o nome do paciente com base no ID
    // Método auxiliar para obter o nome do paciente com base no ID
    private String obterNomePaciente(int pacienteId) {
        try (Connection conn = ConexaoBancoDeDados.conectar()) {
            String sql = "SELECT Nome FROM Pacientes WHERE Id = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, pacienteId);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                return rs.getString("Nome");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "Desconhecido";  // Caso não encontre o paciente
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botaoAgenda;
    private javax.swing.JButton botaoDelogarConta;
    private javax.swing.JToggleButton botaoPainel;
    private javax.swing.JToggleButton botaoProntuarios;
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nomeDaEnfermeira;
    private java.awt.Button novoAgendamento;
    private javax.swing.JTable tabelaDaAgenda;
    // End of variables declaration//GEN-END:variables
}
